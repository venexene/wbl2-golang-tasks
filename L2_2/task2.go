package main

import "fmt"

func test() (x int) {
  defer func() {
    x++
  }()
  x = 1
  return
}

func anotherTest() int {
  var x int
  defer func() {
    x++
  }()
  x = 1
  return x
}

func main() {
  fmt.Println(test())
  fmt.Println(anotherTest())
}

/*
Программа выведет сначала 2, а на следующей строке 1.

В функции test() возвращаемый параметр именнованный и при выполнении return значение x
не копируется в возвращаемое значение сразу, поэтому defer может получить доступ к
 значению x и увеличить его, а следовательно выведется 2. 

В функции anotherTest() возвращается неименованное значение, поэтому при выполнении return x
 значение x равное 1 копируется сразу. После этого defer увеличивает локальную переменную x до 2,
  но это уже не влияет на возвращаемое значение.
*/